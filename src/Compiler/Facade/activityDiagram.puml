@startuml "compilerFacadeDirective"
title compiler facade generation
skinparam {
  ' https://github.com/plantuml/plantuml/blob/49115dfc7d4156961e5b49a81c09b474daa79823/src/net/sourceforge/plantuml/style/FromSkinparamToStyle.java#L145
  activityDiamondBackgroundColor #AAAAAA
  activityEndColor #red
}
start

:compile scriptFile (facade directive phase);
note right: this phase occurs before compiler begin to compile the script

partition Compiler::Facade::generate #LightGray {

  #SpringGreen: Compiler::Facade::generate scriptFile;

  #SpringGreen:Compiler::Facade::filter scriptFile;
  switch (facade directives count?)
  case (0)
    -[#green]->
    :continue with normal compilation;
  case (1)
    -[#green]->
    #SpringGreen:Compiler::Facade::parse $facadeDirective
      ~~uses Compiler::Facade::assertTemplateFile~~
    ;
    if (facade directive can be parsed?) is (<color:green>valid directive) then
      -[#green]->
    else (<color:red>invalid facade\n<color:red>directive)
      -[#red]->
      end
    endif
    if (facade directive template file exists?) is (<color:green>valid facade template file) then
      -[#green]->
    else (<color:red>invalid facade\n<color:red>template file)
      -[#red]->
      end
    endif

    :call Compiler::Implement::interfaceFunctions;
    if (no error?) is (<color:green>valid interface) then
      -[#green]->
    else (<color:red>invalid interface)
      -[#red]->
      end
    endif

    partition Compiler::Facade::generateFacadeScriptFile #LightSkyBlue {
      #DeepSkyBlue:use facade template file;
      #DeepSkyBlue:copy IMPLEMENT directives inside template file;
      note right
        This way, the compiler will automatically check for function presence.
        Note that compiler only checks using regexp, does not check if the function
        is really accessible.
      endnote
      #DeepSkyBlue:move the script inside main function of the template file;
      note right
        The script needs to be compiled before being able to know if all interface
        functions have been implemented
      endnote
      #DeepSkyBlue:Compiler::Facade::generateSwitchCaseFromInterfaceFunctions;
      note right
        generate the switch case to call the public functions
        of the script file using interfaceFunctions computed above;
      endnote
      #DeepSkyBlue:inject switch case inside main function of the template file;
    }
  case(<color:red>>1)
    -[#red]->
    :You can provide only one FACADE directive;
    end
  endswitch

}

:Continue normal compilation process;

:Output result;

stop
@enduml
