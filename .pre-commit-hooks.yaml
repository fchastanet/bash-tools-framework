- id: fixShebangExecutionBit
  name: fixShebangExecutionBit
  description: |
    Find all files containing a shebang and
    mark them as executable if not yet
  language: script
  entry: bin/findShebangFiles
  args: [chmod, +x]
  pass_filenames: false
  types: ['file', 'shell', 'text']
  always_run: false
  fail_fast: true
  stages: [pre-commit, manual]

- id: frameworkLinter
  name: Bash Framework Linter
  description: |
    Check if your files uses the right syntax
    for using bash-tools-framework
  language: script
  entry: bin/frameworkLint
  args:
    [--expected-warnings-count, '0', --format, plain, --theme, default-force]
  pass_filenames: false
  types: ['executable', 'file', 'shell', 'text']
  always_run: false
  fail_fast: true
  stages: [pre-commit, manual]

- id: awkLint
  name: awk Linter
  description: Lint awk files using awk.
  language: script
  entry: bin/awkLint
  args: []
  pass_filenames: false
  files: \.awk$
  always_run: false
  fail_fast: true
  stages: [pre-commit, manual]

- id: shellcheckLint
  name: shellcheck Linter
  description: |
    Lint bash files using shellcheck.
    Installing last version automatically
  language: script
  entry: bin/shellcheckLint
  args: [-f, tty, --xargs, --staged]
  pass_filenames: false
  files: \.sh$
  types: ['executable', 'file', 'shell', 'text']

  always_run: false
  fail_fast: true
  stages: [pre-commit]

- id: runUnitTests
  name: Run unit tests
  description: run unit test using bats in docker isolated environment
  language: script
  entry: bin/test
  args: [-r, src, -j, '30']
  pass_filenames: false
  always_run: true
  fail_fast: true
  require_serial: true
  stages: [pre-commit, manual]

- id: plantuml
  name: Plantuml Converter
  description: Convert plantuml files to images
  language: script
  entry: bin/plantuml
  args: [-f, png, -f, svg]
  pass_filenames: true
  types: ['file', 'non-executable', 'plantuml', 'text']
  always_run: false
  fail_fast: true
  stages: [push, manual]

- id: megalinterCheckVersion
  name: Megalinter Check Version
  description: Megalinter Check if new version is available
  language: script
  entry: bin/megalinter
  args:
    [
      --image,
      'oxsecurity/megalinter-terraform:v7.5.0',
      --check-megalinter-version,
    ]
  pass_filenames: false
  always_run: true
  fail_fast: true
  stages: [pre-push, manual]

- id: megalinter
  name: Megalinter
  description: use megalinter to check your project
  language: script
  entry: bin/megalinter
  args:
    [
      --image,
      'oxsecurity/megalinter-terraform:v7.5.0',
      --config-file,
      '.mega-linter-light.yml',
      --fix,
    ]
  pass_filenames: false
  require_serial: true
  always_run: true
  fail_fast: true
  verbose: true
  stages: [pre-push]

# manual stage used to select github action with megalinter full config
- id: megalinterGithubAction
  name: Megalinter Github Actions
  description: use megalinter with full configuration
  language: script
  entry: bin/megalinter
  args:
    [
      --image,
      'oxsecurity/megalinter-terraform:v7.5.0',
      --config-file,
      '.mega-linter-githubAction.yml',
      --fix,
    ]
  pass_filenames: false
  require_serial: true
  always_run: true
  fail_fast: true
  verbose: true
  stages: [manual]
