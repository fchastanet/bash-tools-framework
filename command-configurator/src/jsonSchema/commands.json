{
  "type": "array",
  "items": {
    "type": "object",
    "required": [
      "author",
      "sourceFile",
      "license",
      "copyright",
      "optionGroups",
      "options",
      "functionName",
      "commandName",
      "version",
      "help",
      "longDescription",
      "callbacks",
      "unknownOptionCallbacks",
      "args"
    ],
    "additionalProperties": false,
    "properties": {
      "options": {
        "title": "Options",
        "type": "array",
        "default": [],
        "items": "merge options + parameter"
      },
      "args": {
        "title": "Args",
        "type": "array",
        "default": [],
        "items": "merge args + parameter"
      },
      "author": {
        "title": "Author",
        "type": "string",
        "default": "",
        "examples": ["[Fran√ßois Chastanet](https://github.com/fchastanet)"]
      },
      "sourceFile": {
        "title": "Sourcefile",
        "type": "string",
        "default": "",
        "examples": ["${REPOSITORY_URL}/tree/master/${SRC_FILE_PATH}"]
      },
      "license": {
        "title": "License",
        "type": "string",
        "default": "",
        "examples": ["MIT License"]
      },
      "copyright": {
        "title": "Copyright",
        "type": "string",
        "default": "",
        "examples": ["copyrightCallback"]
      },
      "optionGroups": {
        "title": "Option Groups",
        "type": "object",
        "patternProperties": {
          "^([A-Za-z0-9_]+(::)?[A-Za-z0-9_]+)$": {
            "type": "object",
            "required": ["title"],
            "additionalProperties": false,
            "properties": {
              "title": {
                "title": "Title",
                "type": "string",
                "default": "",
                "examples": ["GLOBAL OPTIONS:"],
                "pattern": "^.*$"
              }
            }
          },
          "examples": {
            "MAIN_FUNCTION": "main"
          }
        },
        "additionalProperties": false
      },
      "functionName": {
        "$ref": "#/definitions/functionName"
      },
      "commandName": {
        "title": "Command Name",
        "type": "string",
        "examples": ["shellcheckLint"],
        "pattern": "^[a-zA-Z0-9_-]+$"
      },
      "version": {
        "title": "Version",
        "type": "string",
        "examples": ["1.0"],
        "pattern": "^.+$"
      },
      "help": {
        "title": "Help",
        "type": "string",
        "default": "",
        "examples": ["Lint bash files using shellcheck."]
      },
      "longDescription": {
        "title": "Long Description",
        "type": "string",
        "default": "",
        "examples": [
          "shellcheck wrapper that will:\n- install new shellcheck version(${MIN_SHELLCHECK_VERSION}) automatically\n- by default, lint all git files of this project which are beginning with a bash shebang\n  except if the option --staged is passed\n\n${__HELP_TITLE}Special configuration .shellcheckrc:${__HELP_NORMAL}\nuse the following line in your .shellcheckrc file to exclude\nsome files from being checked (use grep -E syntax)\nexclude=^bin/bash-tpl$\n\n${__HELP_TITLE_COLOR}SHELLCHECK HELP${__RESET_COLOR}\n\n@@@SHELLCHECK_HELP@@@"
        ]
      },
      "callbacks": {
        "$ref": "#/definitions/callbacks"
      },
      "unknownOptionCallbacks": {
        "$ref": "#/definitions/callbacks"
      }
    }
  }
}
