{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://github.com/fchastanet/bash-tools-framework/commands-schema.json",
  "title": "Commands",
  "definitions": {
    "functionName": {
      "title": "Function Name",
      "type": "string",
      "default": "",
      "examples": ["zzzGroupGlobalOptionsFunction"],
      "$comment": "https://regex101.com/r/3LGpYZ/1",
      "pattern": "^([A-Za-z0-9_]+(::)?[A-Za-z0-9_]+)$"
    },
    "variableName": {
      "title": "Variable Name",
      "type": "string",
      "examples": ["argShellcheckFiles"],
      "$comment": "https://regex101.com/r/iN050g/1",
      "pattern": "(^[a-z][A-Za-z_0-9]+$)|(^[A-Z_][A-Z_0-9]+$)"
    },
    "callbacks": {
      "type": "array",
      "title": "callbacks",
      "default": [],
      "items": {
        "allOf": [
          {
            "$ref": "#/definitions/functionName",
            "$id": "#root/binFile/commands/items/callbacks/items"
          }
        ]
      }
    }
  },
  "type": "object",
  "required": ["binFile"],
  "properties": {
    "binFile": {
      "$id": "#root/binFile",
      "type": "object",
      "required": ["commands"],
      "properties": {
        "commands": {
          "$id": "#root/binFile/commands",
          "type": "array",
          "items": {
            "$id": "#root/binFile/commands/items",
            "type": "object",
            "required": [
              "author",
              "sourceFile",
              "license",
              "copyright",
              "optionGroups",
              "includes",
              "options",
              "functionName",
              "commandName",
              "version",
              "help",
              "longDescription",
              "callbacks",
              "unknownOptionCallbacks",
              "args"
            ],
            "properties": {
              "author": {
                "$id": "#root/binFile/commands/items/author",
                "title": "Author",
                "type": "string",
                "default": "",
                "examples": [
                  "[Fran√ßois Chastanet](https://github.com/fchastanet)"
                ]
              },
              "sourceFile": {
                "$id": "#root/binFile/commands/items/sourceFile",
                "title": "Sourcefile",
                "type": "string",
                "default": "",
                "examples": ["${REPOSITORY_URL}/tree/master/${SRC_FILE_PATH}"]
              },
              "license": {
                "$id": "#root/binFile/commands/items/license",
                "title": "License",
                "type": "string",
                "default": "",
                "examples": ["MIT License"]
              },
              "copyright": {
                "$id": "#root/binFile/commands/items/copyright",
                "title": "Copyright",
                "type": "string",
                "default": "",
                "examples": ["copyrightCallback"]
              },
              "optionGroups": {
                "$id": "#root/binFile/commands/items/optionGroups",
                "title": "Option Groups",
                "type": "array",
                "default": [],
                "items": {
                  "$id": "#root/binFile/commands/items/optionGroups/items",
                  "title": "Items",
                  "type": "object",
                  "required": ["title", "functionName"],
                  "properties": {
                    "title": {
                      "$id": "#root/binFile/commands/items/optionGroups/items/title",
                      "title": "Title",
                      "type": "string",
                      "default": "",
                      "examples": ["GLOBAL OPTIONS:"],
                      "pattern": "^.*$"
                    },
                    "functionName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/functionName",
                          "$id": "#root/binFile/commands/items/optionGroups/items/functionName"
                        }
                      ]
                    }
                  }
                }
              },
              "includes": {
                "$id": "#root/binFile/commands/items/includes",
                "title": "Include template files",
                "type": "object",
                "patternProperties": {
                  "^.+$": {
                    "type": "boolean",
                    "default": true
                  },
                  "examples": {
                    "default.options.tpl": true
                  }
                },
                "additionalProperties": false
              },
              "options": {
                "$id": "#root/binFile/commands/items/options",
                "title": "Options",
                "type": "array",
                "default": [],
                "items": {
                  "$id": "#root/binFile/commands/items/options/items",
                  "title": "Items",
                  "type": "object",
                  "required": [
                    "variableName",
                    "type",
                    "help",
                    "alts",
                    "defaultValue",
                    "authorizedValues",
                    "callbacks"
                  ],
                  "properties": {
                    "variableName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/functionName",
                          "$id": "#root/binFile/commands/items/options/items/variableName"
                        }
                      ]
                    },
                    "type": {
                      "$id": "#root/binFile/commands/items/options/items/type",
                      "title": "Type",
                      "type": "string",
                      "enum": ["Boolean", "String"],
                      "examples": ["String"]
                    },
                    "help": {
                      "$id": "#root/binFile/commands/items/options/items/help",
                      "title": "Help can be a callback",
                      "type": "string",
                      "default": "",
                      "examples": [
                        "define output format of this command",
                        "helpCallback"
                      ]
                    },
                    "alts": {
                      "$id": "#root/binFile/commands/items/options/items/alts",
                      "title": "Alts",
                      "type": "array",
                      "default": [],
                      "items": {
                        "$id": "#root/binFile/commands/items/options/items/alts/items",
                        "title": "Alts list",
                        "type": "string",
                        "examples": ["--format"],
                        "pattern": "^.+$"
                      }
                    },
                    "defaultValue": {
                      "$id": "#root/binFile/commands/items/options/items/defaultValue",
                      "title": "Default Value of the option",
                      "type": "string",
                      "default": "",
                      "examples": ["tty"]
                    },
                    "authorizedValues": {
                      "$id": "#root/binFile/commands/items/options/items/authorizedValues",
                      "title": "Authorized values (if null ignore)",
                      "type": ["array", "null"],
                      "default": null,
                      "items": {
                        "$id": "#root/binFile/commands/items/options/items/authorizedValues/items",
                        "title": "Items",
                        "type": "string",
                        "examples": ["checkstyle"],
                        "pattern": "^.+$"
                      }
                    },
                    "callbacks": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/callbacks",
                          "$id": "#root/binFile/commands/items/options/items/callbacks"
                        }
                      ]
                    }
                  }
                }
              },
              "functionName": {
                "allOf": [
                  {
                    "$ref": "#/definitions/functionName",
                    "$id": "#root/binFile/commands/items/functionName"
                  }
                ]
              },
              "commandName": {
                "$id": "#root/binFile/commands/items/commandName",
                "title": "Command Name",
                "type": "string",
                "examples": ["shellcheckLint"],
                "pattern": "^[a-zA-Z0-9_-]+$"
              },
              "version": {
                "$id": "#root/binFile/commands/items/version",
                "title": "Version",
                "type": "string",
                "examples": ["1.0"],
                "pattern": "^.+$"
              },
              "help": {
                "$id": "#root/binFile/commands/items/help",
                "title": "Help",
                "type": "string",
                "default": "",
                "examples": ["Lint bash files using shellcheck."]
              },
              "longDescription": {
                "$id": "#root/binFile/commands/items/longDescription",
                "title": "Long Description",
                "type": "string",
                "default": "",
                "examples": [
                  "shellcheck wrapper that will:\n- install new shellcheck version(${MIN_SHELLCHECK_VERSION}) automatically\n- by default, lint all git files of this project which are beginning with a bash shebang\n  except if the option --staged is passed\n\n${__HELP_TITLE}Special configuration .shellcheckrc:${__HELP_NORMAL}\nuse the following line in your .shellcheckrc file to exclude\nsome files from being checked (use grep -E syntax)\nexclude=^bin/bash-tpl$\n\n${__HELP_TITLE_COLOR}SHELLCHECK HELP${__RESET_COLOR}\n\n@@@SHELLCHECK_HELP@@@"
                ]
              },
              "callbacks": {
                "allOf": [
                  {
                    "$ref": "#/definitions/callbacks",
                    "$id": "#root/binFile/commands/items/callbacks"
                  }
                ]
              },
              "unknownOptionCallbacks": {
                "allOf": [
                  {
                    "$ref": "#/definitions/callbacks",
                    "$id": "#root/binFile/commands/items/unknownOptionCallbacks"
                  }
                ]
              },
              "args": {
                "$id": "#root/binFile/commands/items/args",
                "title": "Args",
                "type": "array",
                "default": [],
                "items": {
                  "$id": "#root/binFile/commands/items/args/items",
                  "title": "Items",
                  "type": "object",
                  "required": [
                    "variableName",
                    "functionName",
                    "min",
                    "max",
                    "name",
                    "callbacks",
                    "help"
                  ],
                  "properties": {
                    "variableName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/variableName",
                          "$id": "#root/binFile/commands/items/args/items/variableName"
                        }
                      ]
                    },
                    "functionName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/functionName",
                          "$id": "#root/binFile/commands/items/args/items/functionName"
                        }
                      ]
                    },
                    "min": {
                      "$id": "#root/binFile/commands/items/args/items/min",
                      "title": "Min",
                      "type": "integer",
                      "min": 0,
                      "examples": [0],
                      "default": 0
                    },
                    "max": {
                      "$id": "#root/binFile/commands/items/args/items/max",
                      "title": "Max",
                      "type": "integer",
                      "min": -1,
                      "examples": [-1],
                      "default": 1
                    },
                    "name": {
                      "$id": "#root/binFile/commands/items/args/items/name",
                      "title": "Name",
                      "type": "string",
                      "examples": ["shellcheckFiles"],
                      "pattern": "^.+$"
                    },
                    "callbacks": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/callbacks",
                          "$id": "#root/binFile/commands/items/args/callbacks"
                        }
                      ]
                    },
                    "help": {
                      "$id": "#root/binFile/commands/items/args/items/help",
                      "title": "Help",
                      "type": "string",
                      "default": "",
                      "examples": [
                        "files to validate with shellcheck. If not provided,\nall files from git repository which are beginning\nwith a bash shebang, unless --staged option is provided."
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
